install.packages("shiny")
library(shiny)
runApp('shiny/firstApp')
runApp('shiny/firstApp')
?sliderInput
?seq
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
?numericInput
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
x=c(5,6,9,1)
sort(x)
x[[2]]
x[[1]]
x[[0]]
x[1]
x[2]
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
runApp('shiny/firstApp')
faithful
?faithful
install.packages("EBImage")
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
library(EBImage)
install.packages("pbapply")
library("EBImage", lib.loc="~/R/win-library/3.5")
library("keras", lib.loc="~/R/win-library/3.5")
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
library(EBImage)
image_dir = "C:\\R Programming\\BoMoTix\\all\train\\train"
example_cat_image = readImage(file.path(image_dir, "000bec180eb18c7604dcecc8fe0dba07.jpg"))
example_cat_image = readImage(file.path(image_dir, "000bec180eb18c7604dcecc8fe0dba07.jpg"))
image_dir = "C:\\R Programming\\BoMoTix\\all\\train\\train"
example_cat_image = readImage(file.path(image_dir, "000bec180eb18c7604dcecc8fe0dba07.jpg"))
display(example_cat_image)
example_image = readImage(file.path(image_dir, "000bec180eb18c7604dcecc8fe0dba07.jpg"))
display(example_image)
library(keras)
images_names <- list.files(image_dir)
images_names
labels<-read.csv("C:\\R Programming\\BoMoTix\\all\\labels.csv")
head(label)
head(labels)
head(images_names)
target<-labels$breed
length(images_names)
myPic<-list()
for(i in 1:length(images_names)){
myPic[[i]]<-readImage(images_names[i])
}
for(i in 1:length(images_names)){
myPic[[i]]<-readImage(file.path(image_dir,images_names[i])
}
for(i in 1:length(images_names)){
myPic[[i]]<-readImage(file.path(image_dir,images_names[i]))
}
for(i in 1:10){
myPic[[i]]<-readImage(file.path(image_dir,images_names[i]))
}
myPic[1]
print(myPic[1])
display(myPic[1])
display(myPic[[1]])
display(myPic[[2]])
display(myPic[[3]])
display(myPic[[4]])
str(myPic)
myPic[[1]]
myPic[[2]]
print(myPic[[1]])
display(myPic[[1]])
display(myPic[[2]])
display(myPic[[3]])
length(images_names)
for(i in 1:length(images_names)){
myPic[[i]]<-resize(file.path(image_dir,images_names[i]),c(28,28))
}
for(i in 1:length(images_names)){
myPic[[i]]<-resize(file.path(image_dir,myPic[[i]]),c(28,28))
}
for(i in 1:length(images_names)){
myPic[[i]]<-readImage(file.path(image_dir,images_names[i]))
}
library(EBImage)
library(keras)
## Directory for images
image_dir = "C:\\R Programming\\BoMoTix\\all\\train\\train"
example_image = readImage(file.path(image_dir, "000bec180eb18c7604dcecc8fe0dba07.jpg"))
display(example_image)
images_names <- list.files(image_dir)
labels<-read.csv("C:\\R Programming\\BoMoTix\\all\\labels.csv")
target<-labels$breed
myPic<-list()
##Just to see the size of images
for(i in 1:length(images_names)){
myPic[[i]]<-readImage(file.path(image_dir,images_names[i]))
}
table(target)
library(EBImage)
library(keras)
## Directory for images
image_dir = "C:\\R Programming\\BoMoTix\\all\\train\\train"
example_image = readImage(file.path(image_dir, "000bec180eb18c7604dcecc8fe0dba07.jpg"))
display(example_image)
images_names <- list.files(image_dir)
labels<-read.csv("C:\\R Programming\\BoMoTix\\all\\labels.csv")
target<-labels$breed
myPic<-list()
length(images_names)
10222/3
for(i in 1:3000){
myPic[[i]]<-readImage(file.path(image_dir,images_names[i]))
}
table(target)
library(EBImage)
library(keras)
## Directory for images
image_dir = "C:\\R Programming\\BoMoTix\\all\\train\\train"
example_image = readImage(file.path(image_dir, "000bec180eb18c7604dcecc8fe0dba07.jpg"))
display(example_image)
images_names <- list.files(image_dir)
labels<-read.csv("C:\\R Programming\\BoMoTix\\all\\labels.csv")
target<-labels$breed
myPic<-list()
##Just to see the size of images
for(i in 1:1000){
myPic[[i]]<-readImage(file.path(image_dir,images_names[i]))
}
summary(myPic)
for(i in 1:1000){
myPic[[i]]<-resize(file.path(image_dir,myPic[[i]]),c(28,28))
}
for(i in 1:1000){
myPic[[i]]<-resize(myPic[[i]],c(28,28))
}
summary(myPic)
print(myPic[[1]])
str(myPic)
for(i in 1:1000){
myPic[[i]]<-resize(myPic[[i]],28,28)
}
str(myPic)
summary(myPic)
library(EBImage)
library(keras)
library(ROSE)
## Directory for images
image_dir = "C:\\R Programming\\BoMoTix\\all\\train\\train"
example_image = readImage(file.path(image_dir, "000bec180eb18c7604dcecc8fe0dba07.jpg"))
display(example_image)
images_names <- list.files(image_dir)
labels<-read.csv("C:\\R Programming\\BoMoTix\\all\\labels.csv")
fin=NULL
for (i in unique(labels$breed)) {
sub=subset(labels, labels$breed==i)
sam=sub[sample(nrow(sub), 66), ]
fin=rbind(fin, sam)}
images_names<-as.character(fin$id)
images_names<-paste0(images_names,".jpg")
target<-fin$breed
myPic<-list()
##Resizing the images to 28x28 dimension
for(i in 1:length(images_names)){
myPic[[i]]<-readImage(file.path(image_dir,images_names[i]))
myPic[[i]]<-resize(myPic[[i]],28,28)
#myPic[[i]]<-array_reshape(myPic[[i]],c(50,50,3))
}
train <- combine(myPic[1:100])
str(train)
?compine
?combine
a=3
a
a=3
a
a=c()
a
a=c(a,1)
a
a=c(a,10)
a
a
a[1]
a[2]
a[1]
a[2]
setwd("C:\\R Programming")
data<-read.csv("kajal.csv")
str(data)
setwd("C:\\R Programming")
data<-read.csv("kajal.csv")
setwd("C:\\R Programming")
data<-read.csv("kajal.csv")
setwd("C:\\R Programming")
data<-read.csv("kajal.csv")
setwd("C:\\R Programming")
data<-read.csv("kajal.csv")
str(data)
setwd("C:\\R Programming")
data<-read.csv("tithi.csv")
str(data)
summary(data)
data<-data[complete.cases(data),]
str(data)
nrow(data)
randRows<-sample(1:20000, 500, replace=F)
data<-data[randRows,]
nrow(data)
write.csv(data,"tithi_d3.csv",row.names = F)
var1<-15
var2<-25
if((var1+var2)>50)
print("less")
else
print("more")
var1<-15
var2<-25
if((var1+var2)>50){
print("less")}
else{
print("more")}
var1<-15
var2<-25
if((var1+var2)>50){
print("less")
}
else{
print("more")
}
var1<-15;
var2<-25;
if((var1+var2)>50){
print("less");
}
else{
print("more");
}
var1+var2
if(40>50)
print("Yes")
else
var1<-15;
var2<-25;
if((var1+var2)>50){
print("less");
}
else{
print("more");
}
var1<-15
var2<-25
if((var1+var2)>50){
print("less")
}
else{
print("more")
}
var1=15
var2=25
if((var1+var2)>50){
print("less")
}
var1=15
var2=25
if((var1+var2)<50){
print("less")
}
else{
print("more")
}
var1=15
var2=25
if((var1+var2)<50){
print("less")
}
else{
print("more")
}
var1=15
var2=25
if((var1+var2)<50){
print("less")
}else{
print("more")
}
var1=15
var2=25
if((var1+var2)>50){
print("less")
}else{
print("more")
}
var1=15
var2=25
if((var1+var2)>50){
print("less")
}else{
print("more")
}
setwd("C:\\R Programming")
data<-read.csv("PowerLifting.csv")
library("dplyr", lib.loc="~/R/win-library/3.5")
data<- data %>% select_if(is.numeric)
data
data<-complete.cases(data)
data
setwd("C:\\R Programming")
data<-read.csv("PowerLifting.csv")
data<- data %>% select_if(is.numeric)
data<-data[complete.cases(data)]
setwd("C:\\R Programming")
data<-read.csv("PowerLifting.csv")
data<- data %>% select_if(is.numeric)
data<-data[complete.cases(data),]
data
row(data)
setwd("C:\\R Programming")
data<-read.csv("PowerLifting.csv")
data<- data %>% select_if(is.numeric)
data
str(data)
setwd("C:\\R Programming")
data<-read.csv("PowerLifting.csv")
data<- data %>% select_if(is.numeric) %>% select_if(!is.na)
data<- data %>% select_if(is.numeric) %>% select_if(!is.na())
data<- data %>% select_if(is.numeric) %>% select(!is.na)
data<- data %>% select_if(is.numeric) %>% select(!is.na())
data<- data %>% select_if(is.numeric) %>% select(-'NA')
data
setwd("C:\\R Programming")
data<-read.csv("PowerLifting.csv")
data<- data %>% select_if(is.numeric) %>% select(-"NA")
data<- data %>% select_if(is.numeric,!is.na)
data<- data %>% select_if(is.numeric) %>% remove(is.na)
setwd("C:\\R Programming")
data<-read.csv("PowerLifting.csv")
data<- data %>% select_if(is.numeric)
data<-data[ , colSums(is.na(data)) == 0]
write.csv(data,"satish.csv",row.names = F)
str(data)
library(dplyr)
setwd("C:\\MS_StonyBrook\\sem1\\Visualization\\final project")
data<-read.csv("data.csv")
names(data)
cols<-c("countries","ef_regulation",
"ef_trade",
"ef_money",
"ef_legal",
"ef_government",
"pf_identity",
"pf_expression",
"pf_association",
"pf_religion",
"pf_movement",
"pf_ss",
"pf_rol",
"pf_ss_homicide",
"pf_ss_disappearances_disap",
"pf_ss_disappearances_violent",
"pf_ss_disappearances_organized",
"pf_ss_disappearances_fatalities",
"pf_ss_disappearances_injuries")
cols
dongle_data<-data[,cols]
library(DMwR)
dongle_data <- knnImputation(dongle_data,k=3)
dongle_data<-data[,cols]
str(dongle_data)
summary(dongle_data)
knnImputation(dongle_data,k=3)
cols<-c("ef_regulation",
"ef_trade",
"ef_money",
"ef_legal",
"ef_government",
"pf_identity",
"pf_expression",
"pf_association",
"pf_religion",
"pf_movement",
"pf_ss",
"pf_rol",
"pf_ss_homicide",
"pf_ss_disappearances_disap",
"pf_ss_disappearances_violent",
"pf_ss_disappearances_organized",
"pf_ss_disappearances_fatalities",
"pf_ss_disappearances_injuries")
dongle_data<-data[,cols]
dongle_data <- knnImputation(dongle_data,k=3)
summary(dongle_data)
dongle_data<-data[,cols]
dongle_data1 <- knnImputation(dongle_data,k=3)
dongle_data1$countries<-dongle_data$countries
write.csv(dongle_data1,"data.csv",row.names = F)
summary(dongle_data1)
